# Generated by Django 5.2.5 on 2025-08-31 10:48

import datetime
import django.core.validators
import restaurants.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('restaurants', '0002_table'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='table',
            options={'verbose_name': 'Mesa', 'verbose_name_plural': 'Mesas'},
        ),
        migrations.AddField(
            model_name='restaurant',
            name='accepts_walk_ins',
            field=models.BooleanField(default=True, verbose_name='Acepta sin reserva'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='average_rating',
            field=models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='cancellation_hours',
            field=models.PositiveIntegerField(default=2, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(48)], verbose_name='Horas para cancelar'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='cuisine_type',
            field=models.CharField(choices=[('mexican', 'Mexicana'), ('italian', 'Italiana'), ('japanese', 'Japonesa'), ('american', 'Americana'), ('french', 'Francesa'), ('chinese', 'China'), ('indian', 'India'), ('mediterranean', 'Mediterránea'), ('fusion', 'Fusión'), ('other', 'Otra')], default='other', max_length=20, verbose_name='Tipo de cocina'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='friday_open',
            field=models.BooleanField(default=True, verbose_name='Viernes abierto'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='max_party_size',
            field=models.PositiveIntegerField(default=12, verbose_name='Máximo personas'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='min_party_size',
            field=models.PositiveIntegerField(default=1, verbose_name='Mínimo personas'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='monday_open',
            field=models.BooleanField(default=True, verbose_name='Lunes abierto'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='price_range',
            field=models.CharField(choices=[('$', 'Económico'), ('$$', 'Moderado'), ('$$$', 'Caro'), ('$$$$', 'Muy Caro')], default='$$', max_length=4, verbose_name='Rango de precios'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='requires_deposit',
            field=models.BooleanField(default=False, verbose_name='Requiere depósito'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='saturday_open',
            field=models.BooleanField(default=True, verbose_name='Sábado abierto'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='sunday_open',
            field=models.BooleanField(default=False, verbose_name='Domingo abierto'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='thursday_open',
            field=models.BooleanField(default=True, verbose_name='Jueves abierto'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='total_capacity',
            field=models.PositiveIntegerField(default=0, verbose_name='Capacidad total'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='total_reservations',
            field=models.PositiveIntegerField(default=0, verbose_name='Total reservas'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='tuesday_open',
            field=models.BooleanField(default=True, verbose_name='Martes abierto'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='website',
            field=models.URLField(blank=True, verbose_name='Sitio web'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='wednesday_open',
            field=models.BooleanField(default=True, verbose_name='Miércoles abierto'),
        ),
        migrations.AddField(
            model_name='table',
            name='has_high_chairs',
            field=models.BooleanField(default=False, verbose_name='Sillas altas disponibles'),
        ),
        migrations.AddField(
            model_name='table',
            name='has_view',
            field=models.BooleanField(default=False, verbose_name='Tiene vista'),
        ),
        migrations.AddField(
            model_name='table',
            name='is_accessible',
            field=models.BooleanField(default=True, verbose_name='Accesible'),
        ),
        migrations.AddField(
            model_name='table',
            name='is_quiet',
            field=models.BooleanField(default=False, verbose_name='Zona tranquila'),
        ),
        migrations.AddField(
            model_name='table',
            name='min_capacity',
            field=models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Capacidad mínima'),
        ),
        migrations.AddField(
            model_name='table',
            name='requires_special_request',
            field=models.BooleanField(default=False, verbose_name='Requiere solicitud especial'),
        ),
        migrations.AddField(
            model_name='table',
            name='shape',
            field=models.CharField(choices=[('round', 'Redonda'), ('square', 'Cuadrada'), ('rectangular', 'Rectangular'), ('oval', 'Oval'), ('bar_style', 'Tipo Barra')], default='round', max_length=15, verbose_name='Forma'),
        ),
        migrations.AddField(
            model_name='table',
            name='special_notes',
            field=models.TextField(blank=True, verbose_name='Notas especiales'),
        ),
        migrations.AlterField(
            model_name='restaurant',
            name='advance_booking_days',
            field=models.PositiveIntegerField(default=30, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(365)], verbose_name='Días de anticipación'),
        ),
        migrations.AlterField(
            model_name='restaurant',
            name='closing_time',
            field=models.TimeField(default=datetime.time(22, 0), verbose_name='Hora de cierre'),
        ),
        migrations.AlterField(
            model_name='restaurant',
            name='name',
            field=models.CharField(max_length=200, validators=[django.core.validators.RegexValidator('^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑ\\s\\-&\\.]+$', 'Caracteres no válidos en el nombre')], verbose_name='Nombre'),
        ),
        migrations.AlterField(
            model_name='restaurant',
            name='opening_time',
            field=models.TimeField(default=datetime.time(10, 0), verbose_name='Hora de apertura'),
        ),
        migrations.AlterField(
            model_name='restaurant',
            name='phone',
            field=models.CharField(max_length=20, validators=[restaurants.models.validate_phone_number], verbose_name='Teléfono'),
        ),
        migrations.AlterField(
            model_name='restaurant',
            name='reservation_duration',
            field=models.PositiveIntegerField(default=120, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(480)], verbose_name='Duración reserva (minutos)'),
        ),
        migrations.AlterField(
            model_name='table',
            name='capacity',
            field=models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Capacidad'),
        ),
        migrations.AlterField(
            model_name='table',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Activa'),
        ),
        migrations.AlterField(
            model_name='table',
            name='location',
            field=models.CharField(choices=[('indoor', 'Interior'), ('outdoor', 'Terraza'), ('bar', 'Barra'), ('private', 'Privado'), ('patio', 'Patio'), ('window', 'Ventana')], default='indoor', max_length=10, verbose_name='Ubicación'),
        ),
        migrations.AlterField(
            model_name='table',
            name='number',
            field=models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[A-Za-z0-9\\-]+$', 'Solo letras, números y guiones')], verbose_name='Número'),
        ),
        migrations.AlterUniqueTogether(
            name='table',
            unique_together={('restaurant', 'number')},
        ),
        migrations.AddIndex(
            model_name='restaurant',
            index=models.Index(fields=['is_active', 'cuisine_type'], name='restaurants_is_acti_583437_idx'),
        ),
        migrations.AddIndex(
            model_name='restaurant',
            index=models.Index(fields=['price_range'], name='restaurants_price_r_d674b4_idx'),
        ),
        migrations.AddIndex(
            model_name='restaurant',
            index=models.Index(fields=['average_rating'], name='restaurants_average_ec7bf2_idx'),
        ),
        migrations.AddIndex(
            model_name='restaurant',
            index=models.Index(fields=['name'], name='restaurants_name_0080ba_idx'),
        ),
        migrations.AddIndex(
            model_name='table',
            index=models.Index(fields=['restaurant', 'is_active'], name='restaurants_restaur_174289_idx'),
        ),
        migrations.AddIndex(
            model_name='table',
            index=models.Index(fields=['capacity', 'location'], name='restaurants_capacit_f8978c_idx'),
        ),
        migrations.AddIndex(
            model_name='table',
            index=models.Index(fields=['number'], name='restaurants_number_6b3921_idx'),
        ),
    ]
